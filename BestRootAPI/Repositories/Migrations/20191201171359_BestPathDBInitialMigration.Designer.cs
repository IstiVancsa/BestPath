// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

namespace Repositories.Migrations
{
    [DbContext(typeof(BaseDataContext))]
    [Migration("20191201171359_BestPathDBInitialMigration")]
    partial class BestPathDBInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(40);

                    b.Property<string>("ReviewComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = new Guid("accc57e4-75c2-4557-b570-1865b8a53101"),
                            ReviewComment = "College Bar este un loc aparte , nu am mai vazut bar ca acesta.Cu mancare foarte buna si bauturile deasemenea !",
                            Stars = 2,
                            UserId = new Guid("42001e55-c6ec-4b56-8008-0d5930895867")
                        },
                        new
                        {
                            Id = new Guid("5584714d-e32b-4376-8b3f-83e8efbbf83d"),
                            ReviewComment = "E aproape ca in vama..nu-i un loc pt printi și prințese :))",
                            Stars = 4,
                            UserId = new Guid("42001e55-c6ec-4b56-8008-0d5930895867")
                        },
                        new
                        {
                            Id = new Guid("6507766f-b43a-4d9c-ae95-33b8dd6e7663"),
                            ReviewComment = "Locație bună, preturi ok, personal amabil. Big like",
                            Stars = 4,
                            UserId = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6")
                        },
                        new
                        {
                            Id = new Guid("38ebb74a-2cf1-4799-80e5-0fef88bcc639"),
                            ReviewComment = "O afacere studențească, fără un program clar și cu activități diverse. Personalul e binevoitor, dar fără experiență. Toată lumea face de toate...",
                            Stars = 5,
                            UserId = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6")
                        },
                        new
                        {
                            Id = new Guid("0d13a451-3aa8-4d17-9cd0-7dd21fd3ebb9"),
                            ReviewComment = "O afacere studențească, fără un program clar și cu activități diverse. Personalul e binevoitor, dar fără experiență. Toată lumea face de toate...",
                            Stars = 5,
                            UserId = new Guid("f463cd1e-42b9-412b-b294-5880080e0883")
                        });
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(40);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42001e55-c6ec-4b56-8008-0d5930895867"),
                            Password = "789",
                            Token = new Guid("160dcabf-94dc-42d4-90c1-018edbae7fe0"),
                            Username = "Balmy"
                        },
                        new
                        {
                            Id = new Guid("7e665add-6dda-4e36-b813-ecbd534dfffa"),
                            Password = "678",
                            Token = new Guid("e3940a84-ccf5-4f7a-b8f9-fb81473de2d2"),
                            Username = "Bracing"
                        },
                        new
                        {
                            Id = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6"),
                            Password = "234",
                            Token = new Guid("96220253-30ca-4b1d-8982-47a1b44dc75a"),
                            Username = "Bracing"
                        },
                        new
                        {
                            Id = new Guid("744b602b-e8a7-4083-ac81-6ed65eebb56a"),
                            Password = "456",
                            Token = new Guid("21e36819-b3c1-427c-8e5b-b250c16106e0"),
                            Username = "Cool"
                        },
                        new
                        {
                            Id = new Guid("f463cd1e-42b9-412b-b294-5880080e0883"),
                            Password = "456",
                            Token = new Guid("6af44d56-71b9-475c-b67c-ca375d22e518"),
                            Username = "Cool"
                        });
                });

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.HasOne("Models.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
