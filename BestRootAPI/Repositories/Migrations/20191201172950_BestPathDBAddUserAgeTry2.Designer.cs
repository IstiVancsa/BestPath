// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

namespace Repositories.Migrations
{
    [DbContext(typeof(BaseDataContext))]
    [Migration("20191201172950_BestPathDBAddUserAgeTry2")]
    partial class BestPathDBAddUserAgeTry2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(40);

                    b.Property<string>("ReviewComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be868109-4a59-4040-8c6f-de7a55287223"),
                            ReviewComment = "College Bar este un loc aparte , nu am mai vazut bar ca acesta.Cu mancare foarte buna si bauturile deasemenea !",
                            Stars = 4,
                            UserId = new Guid("42001e55-c6ec-4b56-8008-0d5930895867")
                        },
                        new
                        {
                            Id = new Guid("08fcdf3a-bdc2-40fe-8c09-262514fc0004"),
                            ReviewComment = "Perfect place for students but otherways it.s not that good",
                            Stars = 5,
                            UserId = new Guid("42001e55-c6ec-4b56-8008-0d5930895867")
                        },
                        new
                        {
                            Id = new Guid("46accd10-32e6-4037-a606-734116594544"),
                            ReviewComment = "Perfect place for students but otherways it.s not that good",
                            Stars = 1,
                            UserId = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6")
                        },
                        new
                        {
                            Id = new Guid("883f770a-d75d-461a-8fa7-193a4f628f25"),
                            ReviewComment = "Perfect place for students but otherways it.s not that good",
                            Stars = 4,
                            UserId = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6")
                        },
                        new
                        {
                            Id = new Guid("5d282d4b-496e-4515-bb73-7f65eab84379"),
                            ReviewComment = "Burger făcut la rapid,ars pe o parte, pe cealaltă roz, în interior era între nefăcut și nefăcut :)  cartofii fără nici un gust. Sosul picant este excelent în schimb. Restul adus fără 10 lei. Am fost client fidel pe timpul anului, mergeam în fiecare zi,dar de ceva timp e cam bătaie de joc. Nu e frumos.",
                            Stars = 4,
                            UserId = new Guid("f463cd1e-42b9-412b-b294-5880080e0883")
                        });
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(40);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42001e55-c6ec-4b56-8008-0d5930895867"),
                            Age = 0,
                            Password = "456",
                            Token = new Guid("585b28b1-1713-4716-9c7a-81e3e0094ac2"),
                            Username = "Balmy"
                        },
                        new
                        {
                            Id = new Guid("7e665add-6dda-4e36-b813-ecbd534dfffa"),
                            Age = 0,
                            Password = "234",
                            Token = new Guid("5609c777-70dd-40d2-b21d-3c213c666deb"),
                            Username = "Scorching"
                        },
                        new
                        {
                            Id = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6"),
                            Age = 0,
                            Password = "567",
                            Token = new Guid("5664888b-3d93-4547-aee9-d487d973de68"),
                            Username = "Scorching"
                        },
                        new
                        {
                            Id = new Guid("744b602b-e8a7-4083-ac81-6ed65eebb56a"),
                            Age = 0,
                            Password = "678",
                            Token = new Guid("e73bc12c-fa81-4812-9945-6fd8656c744e"),
                            Username = "Scorching"
                        },
                        new
                        {
                            Id = new Guid("f463cd1e-42b9-412b-b294-5880080e0883"),
                            Age = 0,
                            Password = "567",
                            Token = new Guid("2c51b120-924a-4606-8d9a-e31b2c4e0f25"),
                            Username = "Bracing"
                        });
                });

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.HasOne("Models.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
