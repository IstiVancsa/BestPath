// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

namespace Repositories.Migrations
{
    [DbContext(typeof(BaseDataContext))]
    [Migration("20191201172423_BestPathDBAddUserAge")]
    partial class BestPathDBAddUserAge
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(40);

                    b.Property<string>("ReviewComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = new Guid("776fefca-b609-4b51-bb6e-c6b90969a849"),
                            ReviewComment = "College Bar este un loc aparte , nu am mai vazut bar ca acesta.Cu mancare foarte buna si bauturile deasemenea !",
                            Stars = 1,
                            UserId = new Guid("42001e55-c6ec-4b56-8008-0d5930895867")
                        },
                        new
                        {
                            Id = new Guid("d4e0beea-8835-4ff3-a498-e2798cb46c76"),
                            ReviewComment = "Locație bună, preturi ok, personal amabil. Big like",
                            Stars = 5,
                            UserId = new Guid("42001e55-c6ec-4b56-8008-0d5930895867")
                        },
                        new
                        {
                            Id = new Guid("5dc4004d-e649-4524-a4c0-901de3f0924a"),
                            ReviewComment = "Burger făcut la rapid,ars pe o parte, pe cealaltă roz, în interior era între nefăcut și nefăcut :)  cartofii fără nici un gust. Sosul picant este excelent în schimb. Restul adus fără 10 lei. Am fost client fidel pe timpul anului, mergeam în fiecare zi,dar de ceva timp e cam bătaie de joc. Nu e frumos.",
                            Stars = 3,
                            UserId = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6")
                        },
                        new
                        {
                            Id = new Guid("2a59d09e-ac98-4c0b-8630-ee9d6a58f137"),
                            ReviewComment = "College Bar este un loc aparte , nu am mai vazut bar ca acesta.Cu mancare foarte buna si bauturile deasemenea !",
                            Stars = 4,
                            UserId = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6")
                        },
                        new
                        {
                            Id = new Guid("010ce692-ffd6-4276-86d4-455d173096ea"),
                            ReviewComment = "E aproape ca in vama..nu-i un loc pt printi și prințese :))",
                            Stars = 1,
                            UserId = new Guid("f463cd1e-42b9-412b-b294-5880080e0883")
                        });
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(40);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42001e55-c6ec-4b56-8008-0d5930895867"),
                            Password = "456",
                            Token = new Guid("e8394775-3c73-45e3-bdac-b513cfb5d7e8"),
                            Username = "Warm"
                        },
                        new
                        {
                            Id = new Guid("7e665add-6dda-4e36-b813-ecbd534dfffa"),
                            Password = "678",
                            Token = new Guid("a4e4e153-e27b-466c-814f-1c5d69b4323a"),
                            Username = "Sweltering"
                        },
                        new
                        {
                            Id = new Guid("b8d4eb47-b8d1-4eb4-8b09-2133226ad4c6"),
                            Password = "567",
                            Token = new Guid("9fa67833-ece2-4834-8d64-274549f0c747"),
                            Username = "Bracing"
                        },
                        new
                        {
                            Id = new Guid("744b602b-e8a7-4083-ac81-6ed65eebb56a"),
                            Password = "456",
                            Token = new Guid("15a193ff-1872-447d-a65a-3bce5ac76467"),
                            Username = "Freezing"
                        },
                        new
                        {
                            Id = new Guid("f463cd1e-42b9-412b-b294-5880080e0883"),
                            Password = "789",
                            Token = new Guid("372777e6-9430-4216-9a10-ec21966bc729"),
                            Username = "Cool"
                        });
                });

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.HasOne("Models.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
